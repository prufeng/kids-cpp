二进制
0的二进制表示：0
1的二进制：1
2的二进制：10
3的二进制：11
4的二进制：100

十进制转二进制：除2取余
二进制转十进制：从低位到高位代表2^0, 2^1, 2^2, ...

c++里，0前缀表示八进制数，0x前缀表示十六进制
二进制转八进制：
从低位开始，每3位转一下
十六进制里可以出现0~15，其中10~15用字母a,b,c,d,e,f来表示
二进制转十六进制：
从低位开始，每4位转一下

8位二进制能表示 0~2^8-1
一般来说int是32位
unsigned int可以表示0~2^32-1
long long 64位

有符号数的表示
原码：最高位用作符号位，0表示正数，1表示负数
原码下有“两个0”：+0，-0
8位原码可以表示 -(2^7-1) ~ 2^7-1

反码
正数的反码与原码相同
负数的反码：原码的符号位不变，其它位取反
反码下有“两个0”：+0，-0

补码
正数的补码与原码相同
负数的补码：反码+1
0的补码只有一种：00000000
8位原码可以表示 -2^7 ~ 2^7-1

计算机用补码来存储和计算有符号整数
把加减运算都变成补码的加法，符号位也参与运算

按位运算
按位与 & ： 两个对应位都是1的时候得1，否则得0
按位或 | ：两个对应位至少有一个是1的时候得1，否则得0
按位异或 ^ ： 两个对应位不同的时候得1，否则得0
取反 ~ ： 把每一位取反，比如 ~(-1) = 0

左移 <<
	5 << 1 = 10
	左移一位相当于乘2
右移 >>
	5 >> 1 = 2
	右移一位相当于除以2

取二进制下的最低位：（可以判断奇偶性）
int a = x & 1; //如果x的二进制最低位是1，那么a=1，否则a=0

取二进制下从右往左第i位（最右边是第0位）
两种写法，注意加括号
int a = x & (1 << i);
int a = x >> i & 1;

把二进制下的某位取反：
x = x ^ (1 << i)

把二进制的第i位变成1：
x = x | (1 << i)

把二进制第i位变成0：
思路：先造出一个除了第i位之外其它位都是1的二进制数，再与x做按位与
x = x & ~(1 << i)

